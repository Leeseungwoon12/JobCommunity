<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/views/css/style.css" />
    <script
      src="https://code.jquery.com/jquery-3.7.0.min.js"
      integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g="
      crossorigin="anonymous"
    ></script>
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css"
    />
    <script
      type="text/javascript"
      src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"
    ></script>

    <!-- axios -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
      textarea:focus {
        outline: none;
      }
    </style>
    <title>Document</title>
  </head>

  <body>
    <header id="header">
      <div class="wrap">
        <div class="top_box">
          <h1>
            <a href="/"
              ><svg
                width="72"
                height="32"
                viewBox="0 0 72 32"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <rect x="4" y="2" width="64" height="28" fill="white"></rect>
                <path
                  d="M6.45929 14.9032L9.54585 18.3227C11.811 17.1497 13.9019 15.4228 15.7096 13.3413C16.9853 15.1646 18.7309 16.7608 20.548 17.8684L24.5462 13.8951C22.2313 12.5261 20.1621 10.6063 18.9518 8.32559C19.2443 7.70641 19.5118 7.36726 19.7483 6.71697H24.7889L25.7254 2.1618H10.4233L9.45873 6.71697H14.2442C12.7631 10.3325 10.165 12.9181 6.45618 14.9063L6.45929 14.9032Z"
                  fill="black"
                ></path>
                <path
                  d="M9.51158 18.5156L6.21033 14.8597L6.38457 14.7663C10.1463 12.7501 12.5764 10.2391 14.0107 6.86943H9.26889L10.2957 2H25.9121L25.8778 2.18358L24.9164 6.86943H19.8572C19.7203 7.22725 19.5709 7.49483 19.4154 7.77486C19.322 7.94288 19.2256 8.11712 19.126 8.31937C20.2492 10.3947 22.2001 12.3238 24.627 13.7582L24.8013 13.8609L20.5728 18.0613L20.4701 17.9991C18.6282 16.879 16.9417 15.317 15.7003 13.5902C13.849 15.6935 11.8047 17.3301 9.62048 18.4596L9.51469 18.5156H9.51158ZM6.70816 14.9468L9.58315 18.1298C11.7425 16.9941 13.7649 15.3482 15.5945 13.2386L15.7252 13.0892L15.8403 13.2541C17.0444 14.9779 18.7059 16.5429 20.5293 17.6724L24.2972 13.9262C21.8765 12.4576 19.9319 10.5036 18.8148 8.40027L18.7775 8.33181L18.8117 8.26025C18.9269 8.01756 19.0358 7.81842 19.1447 7.62551C19.3096 7.32993 19.462 7.04989 19.6051 6.66407L19.6425 6.5614H24.6675L25.5418 2.31426H10.5477L9.64849 6.5614H14.4744L14.3872 6.77609C12.956 10.2703 10.5135 12.8683 6.70505 14.9468H6.70816Z"
                  fill="black"
                ></path>
                <path
                  d="M24.0266 11.9131H27.2003L25.7534 18.8859H31.3696L34.8544 2.15557H29.2227L27.9937 8.11401H24.8044L24.0266 11.9131Z"
                  fill="black"
                ></path>
                <path
                  d="M31.4972 19.0415H25.5636L27.0105 12.0687H23.8368L24.6769 7.95533H27.8661L29.0983 2H35.0474L31.5003 19.0415H31.4972ZM25.9464 18.7303H31.2452L34.6616 2.31115H29.3503L28.1213 8.26647H24.932L24.2164 11.7575H27.3901L25.9432 18.7303H25.9464Z"
                  fill="black"
                ></path>
                <path
                  d="M5.19287 29.8444H29.0577L31.3478 19.001H7.4829L5.19287 29.8444ZM12.0754 23.4628H24.8044L24.4061 25.3515H11.674L12.0723 23.4628H12.0754Z"
                  fill="black"
                ></path>
                <path
                  d="M29.1854 30H5L7.35848 18.8454H31.5438L29.1854 30ZM5.38271 29.6889H28.9333L31.158 19.1566H7.61051L5.38271 29.6889ZM24.5306 25.5071H11.4843L11.9479 23.3073H24.9973L24.5337 25.5071H24.5306ZM11.8639 25.1959H24.2817L24.6146 23.6184H12.1999L11.867 25.1959H11.8639Z"
                  fill="black"
                ></path>
                <path
                  d="M52.9009 14.3618H50.5828L51.8897 8.10779H46.9424L45.6356 14.3618H42.9753L44.2821 8.10779H39.4594L38.1557 14.3618H35.819L34.9167 18.6899H51.9986L52.9009 14.3618Z"
                  fill="black"
                ></path>
                <path
                  d="M52.126 18.8454H34.7268L35.6944 14.2031H38.0311L39.3348 7.95222H44.475L43.1682 14.2031H45.5111L46.8179 7.95222H52.0825L50.7757 14.2031H53.0937L52.126 18.8454ZM35.1095 18.5343H51.874L52.711 14.5143H50.393L51.6998 8.26336H47.0699L45.7631 14.5143H42.7854L44.0923 8.26336H39.5869L38.2832 14.5143H35.9465L35.1095 18.5343Z"
                  fill="black"
                ></path>
                <path
                  d="M55.4429 2.15869H38.3704L37.4214 6.71697H54.4971L55.4429 2.15869Z"
                  fill="black"
                ></path>
                <path
                  d="M54.6246 6.87254H37.2316L38.2459 2.00311H55.6358L54.6246 6.87254ZM37.6143 6.5614H54.3726L55.2531 2.31426H38.4979L37.6143 6.5614Z"
                  fill="black"
                ></path>
                <path
                  d="M51.1772 20.9954L46.2922 19.4646C43.9555 23.4379 38.8402 24.9781 33.529 25.4666L35.3741 29.832C39.0114 29.4088 43.0749 27.7473 46.3326 25.2737C48.8934 27.4891 53.0254 29.3435 56.8182 29.7355L59.9173 25.2426C56.0933 24.8505 52.5587 24.4834 50.1846 22.4641C50.5424 22.0067 50.8723 21.5182 51.1772 20.9986V20.9954Z"
                  fill="black"
                ></path>
                <path
                  d="M35.2744 30L33.3018 25.3328L33.5133 25.3141C39.9385 24.723 44.1919 22.7285 46.1583 19.3868L46.2205 19.281L51.4104 20.9052L51.3109 21.0732C51.0308 21.5524 50.7228 22.0098 50.3992 22.436C52.7453 24.3496 56.2394 24.7074 59.9327 25.0839L60.1941 25.1119L56.8928 29.8973L56.8026 29.888C53.1995 29.5177 49.0084 27.7473 46.3263 25.4728C43.1246 27.8749 39.0455 29.5613 35.3895 29.9876L35.2744 30ZM33.7529 25.6035L35.4704 29.664C39.0797 29.219 43.0966 27.5357 46.2392 25.1492L46.3388 25.0715L46.4352 25.1555C49.0457 27.4113 53.1746 29.1786 56.7435 29.5706L59.6402 25.3702C55.9345 24.9906 52.4497 24.5954 50.085 22.5823L49.9698 22.4858L50.0632 22.3676C50.3774 21.9662 50.673 21.5368 50.9437 21.0888L46.3637 19.6544C44.3381 22.9868 40.1003 24.9874 33.756 25.6066L33.7529 25.6035Z"
                  fill="black"
                ></path>
                <path
                  d="M58.9494 2.1618L55.5175 18.6743H61.0839L64.5189 2.1618H58.9494Z"
                  fill="black"
                ></path>
                <path
                  d="M61.2116 18.8299H55.3247L58.822 2.00623H64.7089L61.2116 18.8299ZM55.7074 18.5187H60.9564L64.3261 2.31737H59.0771L55.7105 18.5187H55.7074Z"
                  fill="black"
                ></path>
                <path
                  d="M68 27C68 28.6567 66.6567 30 65 30C63.3433 30 62 28.6567 62 27C62 25.3433 63.3433 24 65 24C66.6567 24 68 25.3433 68 27Z"
                  fill="#5CF636"
                ></path></svg
            ></a>
          </h1>
          <nav class="search_box">
            <input
              type="text"
              placeholder="검색어를 입력해주세요"
              maxlength="50"
              autocomplete="off"
              onkeydown="handleKeyPress(event)"
            />
            <button class="search_button" onclick="searchQuestion()">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                height="1em"
                viewBox="0 0 512 512"
              >
                <style>
                  svg {
                    fill: #00dd6d;
                  }
                </style>
                <path
                  d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
                />
              </svg>
            </button>
          </nav>
        </div>
        <div class="bottom_box">
          <ul class="nav_tab">
            <li><a href="#">직무 탐색</a></li>
            <li><a href="/questions">취업 Q&A</a></li>
          </ul>
          <ul class="login_tab">
            <li><button type="button" class="signBtn">회원가입</button></li>
            <li><button type="button" class="loginBtns">로그인</button></li>
          </ul>
        </div>
      </div>
    </header>
    <section class="answer">
      <div class="answer_box">
        <div class="box_top">
          <div class="popular_category">
            <% if(question.category_id == 1) { %>
            <span> 👔 취업 </span>
            <% } %> <% if(question.category_id == 2) { %>
            <span> 💼 커리어 </span>
            <% } %> <% if(question.category_id == 3) { %>
            <span> 🚀 기술스택 </span>
            <% } %> <% if( yourQuestion ){ %>
            <div class="button">
              <button class="edit" onclick="patchQuestion()">수정하기</button>
              <button class="del" onclick="deleteQuestion()">삭제하기</button>
            </div>
            <% } %>
          </div>
          <h1 class="title"><%= question.title %></h1>
          <div class="popular_info">
            <div class="popular_writer">
              <span><%= question.user.nickname %></span>
            </div>
          </div>
        </div>
        <div class="box_mid"><%= question.content %></div>
        <div class="box_btn">
          <button onclick="toggleLike()">
            <span class="like-heart"
              ><svg
                id="like-heart-button"
                width="16"
                height="16"
                viewBox="0 0 16 16"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M9.63478 4.32414L8.95864 5.02432C8.70739 5.28451 8.36121 5.43146 7.99951 5.43146C7.6378 5.43146 7.29162 5.28451 7.04037 5.02432L6.36423 4.32414C5.51806 3.44787 4.1661 3.44787 3.31993 4.32414C2.44848 5.22658 2.44848 6.70838 3.31993 7.61082L3.99408 8.30894L7.99951 12.4221L12.0029 8.311L12.0068 8.30698L12.6791 7.61082C13.0926 7.18281 13.333 6.59233 13.333 5.96748C13.333 5.34263 13.0928 4.75237 12.6793 4.32436C12.2675 3.89773 11.7186 3.66659 11.1569 3.66659C10.5953 3.66659 10.0466 3.8975 9.63478 4.32414ZM12.9621 9.23719L8.95474 13.3523C8.43133 13.8898 7.56768 13.8898 7.04427 13.3523L3.03693 9.23719L2.36079 8.53701C0.990413 7.1179 0.990413 4.81706 2.36079 3.39794C3.64657 2.06643 5.68192 1.98423 7.06024 3.15135C7.15093 3.22814 7.23877 3.31034 7.32337 3.39794L7.99951 4.09812L8.67564 3.39794C8.7597 3.31085 8.84758 3.22864 8.93889 3.15148C9.5623 2.62464 10.3451 2.33325 11.1569 2.33325C12.0877 2.33325 12.9802 2.71625 13.6382 3.39794C14.2965 4.07931 14.6663 5.00364 14.6663 5.96748C14.6663 6.93131 14.2965 7.85564 13.6382 8.53701L12.9621 9.23719Z"
                  fill="#A4A4A4"
                ></path>
                <% if(isLiked) { %>
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M11.1569 2.33325C12.0877 2.33325 12.9802 2.71625 13.6382 3.39794C14.2965 4.07931 14.6663 5.00364 14.6663 5.96748C14.6663 6.93131 14.2965 7.85564 13.6382 8.53701L12.9621 9.23719L8.95474 13.3523C8.43133 13.8898 7.56768 13.8898 7.04427 13.3523L3.03693 9.23719L2.36079 8.53701C0.990413 7.1179 0.990413 4.81706 2.36079 3.39794C3.64657 2.06643 5.68192 1.98424 7.06024 3.15135C7.06486 3.15525 7.06946 3.15917 7.07405 3.1631C7.15985 3.23651 7.24307 3.31479 7.32337 3.39794L7.9995 4.09812L8.67564 3.39794C8.7597 3.31085 8.84759 3.22864 8.93889 3.15148C8.94251 3.14842 8.94613 3.14537 8.94976 3.14233C9.57138 2.62127 10.3498 2.33325 11.1569 2.33325Z"
                  fill="#00dd6d"
                ></path>
                <% } else { %>
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M11.1569 2.33325C12.0877 2.33325 12.9802 2.71625 13.6382 3.39794C14.2965 4.07931 14.6663 5.00364 14.6663 5.96748C14.6663 6.93131 14.2965 7.85564 13.6382 8.53701L12.9621 9.23719L8.95474 13.3523C8.43133 13.8898 7.56768 13.8898 7.04427 13.3523L3.03693 9.23719L2.36079 8.53701C0.990413 7.1179 0.990413 4.81706 2.36079 3.39794C3.64657 2.06643 5.68192 1.98424 7.06024 3.15135C7.06486 3.15525 7.06946 3.15917 7.07405 3.1631C7.15985 3.23651 7.24307 3.31479 7.32337 3.39794L7.9995 4.09812L8.67564 3.39794C8.7597 3.31085 8.84759 3.22864 8.93889 3.15148C8.94251 3.14842 8.94613 3.14537 8.94976 3.14233C9.57138 2.62127 10.3498 2.33325 11.1569 2.33325Z"
                  fill="none"
                ></path>
                <% } %>
                <span>&nbsp;공감</span>
                <span id="like-count">
                  <%= question.favorite != 0 ? question.favorite : '' %>
                </span>
              </svg>
            </span>
          </button>
        </div>
        <div class="box_bottom">
          <% if(answers.length > 0) { %>
          <div class="reply_title">답변 <%= answers.length %>개</div>
          <% } else { %>
          <div class="reply_title">답변</div>
          <% } %>
          <form name="comment-form">
            <% if(loginOrNot) { %>
            <div class="reply_form" style="background-color: #fff">
              <textarea
                name="comment"
                placeholder="답변을 입력해주세요."
                maxlength="3000"
              ></textarea>
              <div class="reply_btn">
                <button
                  type="button"
                  width="auto"
                  style="background-color: #00dd6d"
                  onclick="postAnswer()"
                >
                  등록
                </button>
              </div>
            </div>
            <% } else { %>
            <div class="reply_form">
              <textarea
                name="comment"
                placeholder="로그인 후 답변을 남겨보세요."
                maxlength="3000"
                disabled=""
              ></textarea>
              <div class="reply_btn">
                <button type="button" width="auto">등록</button>
              </div>
            </div>
            <% } %>
            <div id="replyContainer">
            <% if(answers.length > 0) { %> <% answers.forEach((answer,
              index) => { %>
              <div class="reply_header" style="padding-top: 15px">
                <span><%= answer.user.nickname %></span>
                <% if (answer.isYourAnswer) { %>
                  <span class="reply_btn">
                    <span><a onclick="editAnswer(this, <%= answer.id %>)">수정</a></span>
                    <span><a onclick="deleteAnswer(this, <%= answer.id %>)">삭제</a></span>
                  </span>
                  <% } %>
              </div>
              <% if (index !== answers.length - 1) { %>
              <div
                class="reply_comment"
                style="
                  padding: 12px 0px 10px;
                  line-height: 24px;
                  border-bottom: 1px solid rgb(228, 228, 228);
                "
              >
                <span><%= answer.content %></span>
              </div>
              <% } else { %>
              <div
                class="reply_comment"
                style="padding: 12px 0px 10px; line-height: 24px"
              >
                <span><%= answer.content %></span>
              </div>
              <% }%> <%});%>
              <div class="reply_title"></div>
              <% } else { %>
              <div class="reply_txt">
                <div class="reply_answer">댓글이 없습니다.</div>
              </div>
              <% } %>
            </div>
            </div>
          </form>
      </div>
    </section>

    <input type="hidden" id="questionId" value="<%= question.id %>" />
    <input type="hidden" id="userId" value="<%= question.user.id %>" />
    <input type="hidden" id="answerId"/>
    <script>
      // 질문 삭제
      function deleteQuestion() {
        let qId = document.getElementById("questionId").value;
        let userId = document.getElementById("userId").value;
        console.log(qId);
        const URL = "/questions/" + qId;
        axios({
          url: URL,
          method: "DELETE",
          data: { user_id: userId },
        })
          .then(function (res) {
            alert(res.data);
            window.location.href = "/questions";
          })
          .catch(function (error) {
            if (error.response) {
              alert("서버 응답 오류입니다. 다시 시도해주세요.");
            } else if (error.request) {
              alert("요청 전송 오류입니다. 다시 시도해주세요.");
            } else {
              alert("오류가 발생했습니다. 다시 시도해주세요.");
            }
            window.location.href = "/questions"; // 메인 페이지 URL로 이동
          });
      }

      // 질문 수정
      function patchQuestion() {
        const qId = document.getElementById("questionId").value;
        window.location.href = "/questions/patch/" + qId;
      }

      // 공감 (하트 애니메이션 및 데이터 처리)
      function toggleLike() {
        var pathElements = document.querySelectorAll("#like-heart-button path");

        var secondPathElement = pathElements[1];

        var currentFill = secondPathElement.getAttribute("fill");

        if (currentFill === "#00dd6d") {
          togglelikeQuestion(false);
          secondPathElement.setAttribute("fill", "none");
        } else {
          togglelikeQuestion(true);
          secondPathElement.setAttribute("fill", "#00dd6d");
        }
      }
      // 공감 데이터 처리
      function togglelikeQuestion(like, heartElement) {
        if (like) {
          axios({
            url: document.getElementById("questionId").value + "/likes",
            method: "PATCH",
          }).then(function (res) {
            var likeCountElement = document.getElementById("like-count");
            likeCountElement.textContent =
              res.data.countQuestionLike > 0 ? res.data.countQuestionLike : "";
          });
        } else {
          axios({
            url: document.getElementById("questionId").value + "/unlikes",
            method: "PATCH",
          }).then(function (res) {
            var likeCountElement = document.getElementById("like-count");
            likeCountElement.textContent =
              res.data.countQuestionLike > 0 ? res.data.countQuestionLike : "";
          });
        }
      }

      // 답변 작성
      function postAnswer() {
        const form = document.forms["comment-form"];
        const qId = document.getElementById("questionId").value;
        const comment = form.comment.value;

        if (!comment.length > 0) {
          alert("댓글을 입력해주세요.");
          return false;
        }

        const data = {
          comment: comment,
        };

        const URL = `/questions/${qId}/answers`;
        axios({
          url: URL,
          method: "POST",
          data: data,
        })
          .then(function (response) {
            alert(response.data.result);
            window.location.href = response.data.redirectURL;
          })
          .catch(function (error) {
            if (error.response) {
              // 서버 응답 오류
              alert(error.response.data);
            } else if (error.request) {
              // 요청 전송 오류
              alert("요청 전송 오류입니다. 다시 시도해주세요.");
            } else {
              console.log(error);
            }
          });
      }

      // 답변 수정 버튼 클릭시 이벤트
      function editAnswer(buttonElement, answerId) {
        document.getElementById("answerId").value = answerId;
        var replyComment = buttonElement.closest('.reply_header').nextElementSibling;
        var answerContent = replyComment.querySelector("span").innerText;
      
        var textarea = document.createElement("textarea");
        textarea.value = answerContent;
        textarea.name = "commentEdit";
        textarea.maxLength = "3000";
      
        var previousContentInput = document.createElement("input");
        previousContentInput.type = "hidden";
        previousContentInput.name = "previousContent";
        previousContentInput.value = answerContent;
      
        var replyBtn = buttonElement.parentNode.parentNode;
        replyBtn.innerHTML = '<button type="button" width="auto" style="background-color: #00dd6d" onclick="updateAnswer(this)">수정 완료</button><button type="button" width="auto" onclick="cancelEdit(this)">수정 취소</button>';
      
        replyComment.innerHTML = '';
        replyComment.appendChild(previousContentInput);
        replyComment.appendChild(textarea);
      }
      

      
      // 수정 취소 버튼 클릭시 이벤트
      function cancelEdit(buttonElement) {
        let answerId = document.getElementById("answerId").value;
        var replyContainer = document.getElementById("replyContainer");
        var replyComment = buttonElement.closest('.reply_header').nextElementSibling;
        var previousContentInput = replyComment.querySelector("input[name='previousContent']");
        var answerContent = previousContentInput.value;
      
        // Restore the original answer content when canceling the edit
        replyComment.innerHTML = '<span>' + answerContent + '</span>';
      
        var replyBtn = buttonElement.parentNode;
        replyBtn.innerHTML = '<span><a onclick="editAnswer(this, ' + answerId + ')">수정</a></span> <span><a onclick="deleteAnswer(this, ' + answerId + ')">삭제</a></span>';
      
      }
      
      
      
      
      // 답변 수정 완료 버튼 클릭 이벤트 핸들러
      function updateAnswer(buttonElement) {
        let qId = document.getElementById("questionId").value;
        let aId = document.getElementById("answerId").value;
        const URL = `/questions/${qId}/answers/${aId}`;
        
        var replyContainer = document.getElementById("replyContainer");
        var replyComment = buttonElement.closest('.reply_header').nextElementSibling;
        var answerContent = replyComment.querySelector("textarea[name='commentEdit']").value;
        var previousContentInput = replyComment.querySelector("input[name='previousContent']");
      
        if (!previousContentInput) {
          console.error("Previous content input not found.");
          return;
        }
      
        axios
          .patch(URL, { content: answerContent }) // Specify the ID of the answer to be updated
          .then(function (response) {
            console.log(response);
            alert(response.data.result);
            window.location.href = response.data.redirectURL;
          })
          .catch(function (error) {
            console.error("Failed to update answer.", error);
          });
      }
      
      // 답변 삭제 버튼 클릭 이벤트 핸들러
      function deleteAnswer(index, answerId) {

        var confirmDelete = confirm("답변을 삭제하시겠습니까?");
        if (!confirmDelete) {
          return;
        }
        let qId = document.getElementById("questionId").value;
        const URL = `/questions/${qId}/answers/${answerId}`;
        var replyContainer = document.getElementById("replyContainer");
        var replyHeaders = replyContainer.querySelectorAll(".reply_header");
        var replyComments = replyContainer.querySelectorAll(".reply_comment");
        console.log(replyContainer);
        if (replyHeaders.length <= index) {
          console.error("Invalid index:", index);
          return;
        }

        if (replyComments.length <= index) {
          console.error("Invalid index:", index);
          return;
        }
        var replyHeader = replyHeaders[index];
        var replyComment = replyComments[index];
      
        // 답변 삭제 로직 수행
        axios
          .delete(URL)
          .then(function (response) {
            console.log(response);
            alert(response.data.result);
            window.location.href = response.data.redirectURL;
          })
          .catch(function (error) {
            console.error("Failed to delete answer.", error);
          });
      }
      
      function searchQuestion() {
        const word = document.querySelector('.search_box input').value
        window.location.href = `/questions/search?word=${word}`
      }

      function handleKeyPress(event) {
        if (event.key === 'Enter') {
          searchQuestion();
        }
      }
    </script>
  </body>
</html>
